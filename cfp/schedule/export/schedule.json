{"schedule": {"version": "0.10", "base_url": "https://cfp.2021.djangocon.eu/porto/schedule/", "conference": {"acronym": "porto", "title": "DjangoCon Europe 2020", "start": "2020-09-18", "end": "2020-09-19", "daysCount": 2, "timeslot_duration": "00:05", "days": [{"index": 1, "date": "2020-09-18", "day_start": "2020-09-18T04:00:00+01:00", "day_end": "2020-09-19T03:59:00+01:00", "rooms": {"Virtual": [{"id": 62, "guid": "7a27c6c4-c3b2-5331-9619-8cceb40f8efb", "logo": "", "date": "2020-09-18T09:15:00+01:00", "start": "09:15", "duration": "00:40", "room": "Virtual", "slug": "AF8EFE", "url": "https://cfp.2021.djangocon.eu/porto/talk/AF8EFE/", "title": "How To Get On This Stage (And What To Do When You Get There)", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Would you like to give a talk at DjangoCon, but don't know where to start? Does the idea of getting on the stage terrify you? This talk will tell you why you should give a talk and how to go about it. I'll cover submitting a proposal, writing your talk, preparing to speak and actually getting behind the lectern to thunderous applause!", "description": "Speaking at a programming conference may seem like an impossible goal for many people, for a number of reasons: fear of public speaking, the feeling that you don't know enough to give a talk, you don't think you have any good ideas for a talk, or maybe the idea that public speaking is very difficult. I'm going to persuade you that you _should_ get up on stage and give a talk to your peers. Once I've persuaded you that you should give a talk, then I'm going to show you _how_.\r\n\r\n## Coming up with an idea\r\n\r\nComing up with an idea can sometimes be the hardest part! I'll cover how to get (and keep) ideas by looking at what you do every day, what you know most about, and keeping a notebook of ideas so that when the time comes to submit a proposal, you'll have plenty of choice.\r\n\r\n## Submitting a proposal\r\n\r\nSubmitting a proposal to a CFP can seem quite daunting. Even if it doesn't seem daunting, there are a bunch of things you can get wrong that make it less likely for your talk to be accepted. I'll give you several tips for increasing your chances of being selected. I'll also talk about _rejection_ and why you shouldn't feel dejected about being rejected. (It happens to everyone!)\r\n\r\n## Writing a talk\r\n\r\nI'll describe some processes for writing a talk and building a slide deck to match (if you want to!) I'll cover some different styles of public speaking, including how to find your own style, and I'll talk about live coding. (With a strong recommendation that you shouldn't do it - at least until you've got more experience.)\r\n\r\n## Preparation\r\n\r\n**Practice, practice, practice!** Many inexperienced speakers underestimate how much rehearsal is required to give a great talk; I'm going to correct this misunderstanding! I'll cover some different approaches to ensuring that you're less nervous when it's time to step on to the stage, and you've maximised your chances of your talk going smoothly.\r\n\r\n## Giving your talk\r\n\r\nAfter you've had an idea, had your proposal accepted, written your talk, designed your slides, and practiced (and practiced and practiced) it'll be time to step behind the lectern and give your talk! I'll give you tried and tested advice from experienced speakers to help your talk go smoothly.\r\n\r\nAnd you know what? Even if some things go wrong you'll still be applauded enthusiastically by an audience of your peers!\r\n\r\nVideo: https://www.youtube.com/watch?v=4rsL974kwsE&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 53, "code": "WYDHMU", "public_name": "Mark Smith", "biography": "Mark, commonly known as Judy2k online, is a Developer Advocate for MongoDB, and been lucky enough to speak at programming conferences around the World. He likes programming in Python, Rust & Go. If he's not sitting in front of a computer he's probably crocheting or building a mechanical keyboard.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 41, "guid": "3f76e9b2-93a4-5b68-b55c-50a3a579edd6", "logo": "", "date": "2020-09-18T09:55:00+01:00", "start": "09:55", "duration": "00:40", "room": "Virtual", "slug": "L9CTY7", "url": "https://cfp.2021.djangocon.eu/porto/talk/L9CTY7/", "title": "C is for Cookie", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "\"This site uses cookies\"... no kidding! Every site uses cookies! Cookies are a much maligned, but essential part of the web experience. But what actually *are* cookies? Why are they needed? How do they work? How are they used? How are they misused? And how have they changed as the modern web as evolved? \r\n\r\nIn this talk, you'll get a complete history of browser cookies, and a deep dive into the cookie specification. You'll learn the various ways your Django site uses cookies, and how others can use use cookies on your site. And you'll get a preview of some changes that may be coming to the way the web uses cookies.", "description": "Whether you like it or not - if you're using the web, you use cookies. HTTP is a stateless protocol; without a mechanism to preserve a user's state between requests, many of the web interactions we take for granted would be much more difficult. For most websites, cookies are that mechanism.\r\n\r\nThis talk will provide a deep dive into the history and use of cookies. You'll get a walk through of the what and how of everything that can be done with cookies, and you'll see how to control those properties in your Django site. You'll also get a brief overview of the the ways cookies can be abused, and how governments are intervening on behalf of users. Lastly, you'll learn about some proposals that are working their way through standards organizations that could radically change how sites use cookies.\r\n\r\nAnd, if you're really, really good and stay all the way to the end, I'll share my secret family choc-chip cookie recipe.\r\n\r\nVideo: https://www.youtube.com/watch?v=dinuA2KM3B4&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 35, "code": "BLHUDY", "public_name": "Russell Keith-Magee", "biography": "Dr Russell Keith-Magee is the founder of the BeeWare project, developing GUI tools and libraries to support the development of Python software on desktop and mobile platforms. He is also a 14 year veteran of the Django core team, and for 5 years, was President of the Django Software Foundation. In his day job, he wrangles data pipelines for Survata.\r\n\r\nHe is a frequent speaker at Python and Django conferences around the globe, sharing his experiences as a FLOSS developer, community maintainer, and (unsuccessful) startup founder. He lives in Whadjuk Noongar country - otherwise known as Perth, Western Australia.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 84, "guid": "c5167e81-8c01-5540-bbb6-cbd3d779830e", "logo": "", "date": "2020-09-18T10:35:00+01:00", "start": "10:35", "duration": "00:40", "room": "Virtual", "slug": "KGM8UB", "url": "https://cfp.2021.djangocon.eu/porto/talk/KGM8UB/", "title": "There\u2019s more than one way to draw a map - lessons learned after the Google Maps SDK became unaffordable", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "The Google Maps SDK: well-known, powerful, and extremely popular - and after July 2018, suddenly unaffordable. We needed to find an alternative for Django geospatial projects. This is the story of our search and what we found, and the lessons that we\u2019d like to share from the experience. The good news is: we returned with new knowledge from our wanderings, and were able to migrate our existing projects successfully.", "description": "What would you do if the costs of an essential service in your project grew 14 times, literally overnight? That\u2019s what we faced in 2018, when the Google changed the pricing structure for its Maps API. Suddenly, a viable project - a P2P platform for renting photo and video equipment - was no longer viable.\r\n\r\nNaturally, the first thing we did was panic. So did our client. Then we reminded ourselves that despite its ubiquity, Google is not the only provider of online maps. We started our search for a suitable alternative, that would offer equivalent functionality and convenience for a Django application, at an affordable price.\r\n\r\nOur application had a number of demands: we needed accurate geodata, geolocation, disambiguation of similar or identical place-names, and the ability to manage and display many thousands of geolocated items. The frontend needed to handle this smoothly and performantly, with features such as clusterification in order to provide a responsive experience in the user\u2019s web browser.\r\n\r\nWe found our solution in HERE Maps, but along the way, we researched several options in depth (OpenStreetMap, MapBox, TomTom and others) all from the point of view of the Django developer. \r\n\r\nWe\u2019ll present our overview of these options and their various advantages, giving an up-to-date snapshot of some of the main candidates for Django mapping integration in 2020. We\u2019ll show that not only is Google not the only option, it\u2019s not even always the best.\r\n\r\nWe learned that the criteria for choosing a good mapping service are not always the obvious ones, and that choices made on the basis of smaller or test projects sometimes don\u2019t scale well. Now that we know what to look for when presented with the options, we\u2019d like to share tips that will benefit any Django developer facing a similar choice, and reveal some of the hidden traps we discovered along the way. \r\n\r\nWe\u2019ll also describe how we adapted to HERE Maps, our new tool, and the work we had to undertake to replace some of the functionality provided in Google\u2019s API; our findings will help other Python/Django developers adopt HERE Maps in the future. \r\n\r\nIn all, we hope that our experience will turn out to be an entertaining story for the audience, a valuable guide to other Djangonauts who need a new map - and a reminder that Google is not the only option.\r\n\r\nVideo: https://www.youtube.com/watch?v=1j7KptyNmS8&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 57, "code": "NYU9SA", "public_name": "Alexander Gaevsky", "biography": "Django-oscar core developer, running Django development agency.\r\n\r\nSocial media:\r\n* https://github.com/sasha0\r\n* https://www.linkedin.com/in/agaevsky/\r\n* https://twitter.com/agaevsky", "answers": []}, {"id": 64, "code": "FRQYEV", "public_name": "Basil Dubyk", "biography": "Twitter: https://twitter.com/BasilDubyk\r\n\r\nGitHub: https://github.com/samitnuk", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 13, "guid": "c9e85372-55d4-5f43-8af8-763a0e123e36", "logo": "", "date": "2020-09-18T11:15:00+01:00", "start": "11:15", "duration": "00:40", "room": "Virtual", "slug": "CEGCQX", "url": "https://cfp.2021.djangocon.eu/porto/talk/CEGCQX/", "title": "A Pony On The Move: How Migrations Work In Django \ud83d\udc0e", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Django ships with a built-in migration framework since version 1.7 in 2014. While migrations are widely used by almost every Django project ever since, there is little known about the internals of the migration framework. This talk will look into its components and how they are tied together.", "description": "Django\u2019s migration framework has been around for almost 6 years. From the outset, it had a long journey ahead, considering all the learnings and experience Andrew Godwin had with the 3rd party package South. However, Django\u2019s migrations are _not_ to be considered a rewrite of South as they work fundamentally different.\r\n\r\nThis talk will give an insight view into the components that make up Django\u2019s migration framework. The talk will lay-out how these components fit and work together. It will outline major challenges and problems that were encountered and overcome along the way.\r\n\r\nOne of the goals of this talk is to reduce the entry barrier for potential Django contributors to the rather complex migration framework. From their own experience, the author is well aware that there are some parts that are tricky and non-trivial and non-obvious. Thus, this talk is absolutely aimed at prospective contributors, regardless if they are first-time Django contributors or ones with a year-long track record.\r\n\r\nVideo: https://www.youtube.com/watch?v=u6cVvbuUzlk&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 14, "code": "QJWFKC", "public_name": "Markus Holtermann", "biography": "Markus Holtermann works as a back-end and infrastructure engineer at Crate.io. He has been a Django core contributor since early 2015. He is a member of the Django security and operations team as well as an organizer of DjangoCon conferences. Markus has been a project lead at the German ubuntuusers.de community support platform where he discovered Python and Django in 2010.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 35, "guid": "c22dba1f-8ad6-59f0-9f59-f8b7eba8769d", "logo": "", "date": "2020-09-18T11:55:00+01:00", "start": "11:55", "duration": "00:40", "room": "Virtual", "slug": "UVAH79", "url": "https://cfp.2021.djangocon.eu/porto/talk/UVAH79/", "title": "Developing a Security Mindset: Practical Lessons for Pythonistas", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "This talk will discuss why developers should grow their security mindset and will give them practical advice for how to do so\u2014even in a workplace where many issues compete for their attention. Examples will be given from the Python and Django world and should be of interest to those new to security and those wanting to help their team develop a security mindset.", "description": "As more of the world is run by software, software security becomes increasingly important. As developers, we have a lot on our plate already and developing your security mindset may seem intimidating. It might seem that security should just altogether be someone else\u2019s job.\r\n\r\nThis talk will discuss why developers should grow their security mindset and will give them practical advice for how to do so\u2014even in a workplace where many issues compete for their attention.\r\n\r\nIf you are new to security, this is the talk for you. If you know a bit and want to help your team strengthen their security posture, this talk is for you. If you want to take the next step in your security journey, this talk will point the way.\r\n\r\nVideo: https://www.youtube.com/watch?v=ZXVNv6GqWu8&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 32, "code": "MQB8XY", "public_name": "Hayley Denbraver", "biography": "Hayley Denbraver is a Developer Advocate at Snyk. In that role, she is focused on encouraging security education and the adoption of better security practices within developer communities. She has spoken at a number of Python community events, both within the US and internationally. In a previous chapter of her life, Hayley worked as a licensed Civil Engineer.\r\n\r\nTwitter: https://twitter.com/hayleydenb", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 54, "guid": "020fde81-fc64-5f15-af54-4c613c0ac89d", "logo": "", "date": "2020-09-18T12:35:00+01:00", "start": "12:35", "duration": "00:40", "room": "Virtual", "slug": "9RLVSJ", "url": "https://cfp.2021.djangocon.eu/porto/talk/9RLVSJ/", "title": "Digitisation and Education \u2014 How the AlekSIS project fosters co-creation of school software by young people", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Free software is all about participation, and projects can empower young people to participate by designing their software in a way that opens it up for learning and teaching in education. This talk reports from the AlekSIS project that develops real-world educational software that is intended to be extended by the students that actually work with it.", "description": "Free software is all about participation, and this means that every user is a potential contributor. While all communities should keep this in mind, there is a very special target group that we can strive to empower through education: Young users, i.e. children and adolescents, both personally and in schools. Using the natural mentoring environment in schools, open software can be designed in a way that opens it for learning and teaching code, and contributing to real world software in class.\r\n\r\nWe want to invite the audience on a journey from looking at tool requirements in schools and the many ways that young people use software, through experiences in convincing teachers that free software and helping students to participate in their digital world is important, right to impressions of how the AlekSIS project uses the Django ecosystem to create an enterprise-grade, ready to use school information system that still can be extended and co-designed by teachers, students and computer classes. Doing so, we want to look into the technical aspects of how we leverage the Django framework, thought-through coding style and modularisation, combined with a layer of abstraction to create a platform and app ecosystem that allow student groups to create their own apps for use cases at their schools, as well as into some pedagogic aspects of how a decentral group of software engineers, young students and teachers work together in an agile project.\r\n\r\nIn the schools which drive the project, teachers benefit from a very well-fitted system they co-designed, and students benefit from computer lessons that result in a visible impact on their own environment instead of one-time projects from text books.\r\n\r\nVideo: https://www.youtube.com/watch?v=tA8J-cfm3UU&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 47, "code": "SMZUSA", "public_name": "Tom Teichler", "biography": "Born 2004, I am just the average junior high school student from a small village named Dabringhausen in Germany (near Cologne and D\u00fcsseldorf). Average, except for the fact that, starting from my 13th birthday, I have by now contributed roughly 50,000 lines of code to free software projects, mostly related to Python and Django applications.\r\n\r\nHaving participated in some coding workshops by Teckids, the free software youth organisation, I quickly started contributing to tools used there, and throughout time became a core contributor to several educational software projects, Debian Edu and the AlekSIS school information system ranked foremost.\r\n\r\nWhen not coding or caring for DevOps infrastructure, I enjoy music, going out geocaching sometimes, and travelling the world for fun and for visiting conferences or development sprints.", "answers": []}, {"id": 48, "code": "UVBGEY", "public_name": "Dominik George", "biography": "System engineer, software developer, and educational enthusiast \u2014 this is the combination I have been describing myself as for some time now. It means that I mostly emply my technical background in working at Teckids, the free software organisation, to drive forward free software in education, and help children become contributors in free software projects.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 95, "guid": "cc386434-6e01-5f6b-8cfc-aafd3400ff66", "logo": "", "date": "2020-09-18T13:15:00+01:00", "start": "13:15", "duration": "00:40", "room": "Virtual", "slug": "QQWUBW", "url": "https://cfp.2021.djangocon.eu/porto/talk/QQWUBW/", "title": "New ways to deploy your Django app", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "For many people, deploying their site is still the hardest part of being a Django developer. This talk will demonstrate three modern, low-cost alternatives to the standard approaches. I'll show how to deploy the same app three times, using self-hosted Docker, Google Cloud Run and static site generation, outlining the trade-offs with each approach.", "description": "I talked about the future of Django app deployment in my talk on 'Serverlessness'  at DjangoCon Europe in 2017, but three years later this still remains the hardest topic for many Django developers, as evidenced by the proportion of questions on StackOverflow and reddit with titles like \"I've built my app, how do I make it live?\". In same period, the tools available to app developers have matured, with tools like Zappa and Dokku, and services like Cloud Run and Fargate opening up new, simpler approaches to deployment.\r\n\r\nThis will be a practical, hand-on talk, briefly outlining the issues which face developers before demonstrating three modern approaches, with carefully prepared live demos (and video fall backs, if necessary!). At the end I'll offer a simple model to help developers decide between the options for their particular needs, weighing up cost, simplicity, scalability and control.\r\n\r\nVideo: https://www.youtube.com/watch?v=SiTat1-sknU&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 81, "code": "PLL7MQ", "public_name": "Tom Dyson", "biography": "Tom is the technical director of Torchbox, a UK software company which uses Python to make the world a better place. He runs the open source Wagtail project, designing and maintaining the popular Django-based CMS used by NASA, Google, Mozilla and Apple. His interests include serverless architectures, headless content management and practical machine learning.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 109, "guid": "1c39d5e6-ec1b-5f90-b910-015b3630c9f1", "logo": "", "date": "2020-09-18T13:55:00+01:00", "start": "13:55", "duration": "01:15", "room": "Virtual", "slug": "9HUUB8", "url": "https://cfp.2021.djangocon.eu/porto/talk/9HUUB8/", "title": "KEYNOTE - Biometric Unsecurity", "subtitle": "", "track": null, "type": "Keynote", "language": "en", "abstract": "Biometrics are widely regarded by the public, and many developers, as heightened security. Their actual track record tells a very different story. Biometric technologies are systematically making the world a less safe place. We have an obligation to do something about that. And we can.", "description": "In this talk, you'll learn about the breathtaking range of biometrics being tracked and assessed. You'll learn about dangerously wrong conclusions being drawn. You'll learn about spurious underlying premises and untrustworthy training data, and widespread misuses that are determining life and death decisions in government, policing, and health monitoring.\r\n\r\nMost importantly, you'll learn how to assess these technologies, and avoid contributing to their development, misuse, and proliferation.\r\n\r\nVideo: https://www.youtube.com/watch?v=flQZ32QBQY0&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 93, "code": "AWCMWX", "public_name": "Carina C. Zona", "biography": "Carina C. Zona is a developer, advocate, and certified sex educator. She spends a lot of time thinking about the unexpected cultural effects of our decisions as programmers. Carina is also the founder of CallbackWomen, which is on a mission to radically increase gender diversity at the podium of professional programmers\u2019 conferences.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 92, "guid": "135d6a34-7b5d-5be2-b4f8-793affd7892a", "logo": "/cfp-media/porto/images/HK3NUR/Screenshot_2020-03-01_12-37-54_3xMM2XA.png", "date": "2020-09-18T15:10:00+01:00", "start": "15:10", "duration": "00:40", "room": "Virtual", "slug": "HK3NUR", "url": "https://cfp.2021.djangocon.eu/porto/talk/HK3NUR/", "title": "Creating a spotify-like personal streaming service with Django and Vue: Lessons learned", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "In today's web, working with a frontend framework or library is becoming the norm. Vue is one of the most popular ones but how does it play with Django, what are the advantages and caveats?\r\n\r\nWe'll use a practical example to explore some of those, ranging from getting the 2 frameworks to \"just\" work together to data exchange through a DRF API, authentication and websockets.", "description": "We'll use [a spotify-like personal streaming service](https://gitlab.levitnet.be/emma/radioify/-/tree/master) as a sample project for our journey into Django and Vue integration. We'll start with a short demo of the application so that everyone knows what we will be looking into.\r\n\r\nDuring the talk we'll cover the following topics:\r\n\r\n- Getting both development servers (Django and [Vue](https://vuejs.org/)) running and having them talk to each other.\r\n- Overview of Vue tools (browser extensions, cheat sheet, cli)\r\n- Vue basics\r\n- Data exchange using [Django REST Framework](https://www.django-rest-framework.org/),  [VueX](https://vuex.vuejs.org/) and [Axios](https://github.com/axios/axios)\r\n- Connecting the frontend to a [Channels](https://channels.readthedocs.io/en/latest/) websocket\r\n- Authentication (token vs session)\r\n\r\nThe talk will end with a conclusion of positive and negative experiences encountered during the development of the application\r\n\r\nVideo: https://www.youtube.com/watch?v=BFAWt7YGiKs&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 66, "code": "XREAEA", "public_name": "Emma Delescolle", "biography": "Long-time pythonista, Django fan, co-maintainer and co-author of DRF-Schema-Adapter and other OSS libraries\r\n\r\nI am from Belgium and have been involved in open-source at different levels for over a 15 years.\r\n\r\nOne of the things I enjoy the most is sharing knowledge with others. And this is why I enjoy writing tutorials as well as giving talks and workshops.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 56, "guid": "f863dc51-1b98-5caf-b73c-8a0b81c7ae2b", "logo": "", "date": "2020-09-18T15:50:00+01:00", "start": "15:50", "duration": "00:40", "room": "Virtual", "slug": "DA7WFX", "url": "https://cfp.2021.djangocon.eu/porto/talk/DA7WFX/", "title": "A Pentester's Thoughts on Django Security", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Django can make you feel like you are in security heaven and yet there are some pitfalls to avoid. In this talk, I want to praise Django design choices, give an overview of Django's security features and their limitations and conclude with some general security best practices to keep in mind.", "description": "**Motivation**\r\n\r\nBy day, I work as a penetration tester trying to find security vulnerabilities in other people's web applications. By night, I develop my own Django-based web application and try not to make the same mistakes I see in my customer's applications. Within the last two years of working with Django, I could not stop being amazed by the security focus of the Django team.\r\n\r\n**Praise and History**\r\n\r\nIn a short history lesson, I want to point out a few design choices and decisions the Django team has made over the years which make me very comfortable with using Django as a web framework because they are proof that the Django team takes security very seriously.\r\n\r\n**Django Security Features and their limitations**\r\n\r\nWhile it is amazing what Django does for security already out of the box, it does not replace developer awareness. I would like to give an overview of Django's security features and point out their (already known and documented) limitations especially in cases where developer's might have a false sense of \"security is already taken care off\".\r\n\r\n**Best Practices**\r\n\r\nFinally, I will share some security best practices which will help avoiding unnecessary pentest findings and support you with keeping your applications secure.\r\n\r\nVideo: https://www.youtube.com/watch?v=Tvr6CXh3lQk&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 50, "code": "BCRFPM", "public_name": "Pascal Uter", "biography": "*Pentester by day, web developer by night.* After graduating as a physicist in T\u00fcbingen, Germany in 2013, Pascal started working as a penetration tester for web applications, mobile applications, and windows networks. In 2018, he started to work on his own web application. Having written a couple of Python scripts before, Pascal was happy to find Django as a Python-based web framework with a strong security focus.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 89, "guid": "5928f95d-24e1-57ff-95af-13ec242ea28d", "logo": "", "date": "2020-09-18T16:30:00+01:00", "start": "16:30", "duration": "00:40", "room": "Virtual", "slug": "D9XNGW", "url": "https://cfp.2021.djangocon.eu/porto/talk/D9XNGW/", "title": "Can't Get You Out of My Head", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Our devices are continually sending and receiving a complex set of instructions and information every time they interact over HTTP. While this mostly invisible interaction is primarily made up of the same standard set of attributes what oddities would we discover if we spidered 10,000,000 domains?", "description": "HTTP headers are the\u2013mostly\u2013hidden backbone of our online infrastructure. However, for a standard designed to be consumed entirely by code, and rarely seen by people, HTTP headers contain a surprising amount of geeky humour and many oddities.\r\n\r\nSince reading the convoluted history of the browser user-agent and finding out that MySpace\u2019s servers were powered by \u201cNerd Rage\u201d I\u2019ve been curious as to what other interesting histories headers had, or what easter eggs mischevious developers had hidden for others like them to find.\r\n\r\nJoin me on this deep dive into HTTP headers as I go through how I spidered 10,000,000 domains. We\u2019ll look at the challenges of writing an efficient, concurrent HTTP spider in Python as well as some of my findings from the harvested headers.\r\n\r\nVideo: https://www.youtube.com/watch?v=i0WkpgLwtoA&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 77, "code": "VNRLMW", "public_name": "Aaron Bassett", "biography": "Aaron Bassett has lived in Ireland, Scotland, Hungary, and the Netherlands. He is a recovering Senior Software Engineer turned award-winning Developer Advocate.  As a developer, public speaker, writer, and mentor; he spends most of his time making cool stuff and helping other people make **unbelievably** cool stuff \ud83d\udd25\ud83e\udd84\u2728\ud83d\ude80\r\n\r\nAaron has been working online since 2005 and has always enjoyed sharing what he learned by organising and speaking at local meetups. He spoke at his first conference in 2013, and since then he's spoken at conferences on a range of topics all over the world. He has a passion for mentoring and has been involved with [Social Innovation Camp UK](https://en.wikipedia.org/wiki/Social_Innovation_Camp), [Social Innovation Camp Kosovo](http://unicefstories.org/tag/social-innovation-camp-kosovo/), [Startup Weekend](https://startupweekend.org/), [Open Glasgow](http://futurecity.glasgow.gov.uk/hacking-the-future/), [DjangoGirls](https://djangogirls.org/) and [global diversity CFP day](https://www.globaldiversitycfpday.com/events/101).", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 37, "guid": "e8363383-6573-5ab4-a69c-5f2b432e9b08", "logo": "/cfp-media/porto/images/79JKQ9/djangocon-eu_H7nQtzv.jpg", "date": "2020-09-18T17:10:00+01:00", "start": "17:10", "duration": "00:40", "room": "Virtual", "slug": "79JKQ9", "url": "https://cfp.2021.djangocon.eu/porto/talk/79JKQ9/", "title": "How to Hack a Django Website", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Why did Facebook have a public Django-based site that got hacked? What was the flaw discovered in GitHub's password reset mechanism that was also found to affect Django auth? Are *your* projects vulnerable?\r\n\r\nI'll walk you through some stories of common web vulnerabilities, and what they mean for Django. I've had the pleasure of working on over 50 Django projects so far, so I've seen some patterns emerge.", "description": "Security is boring. But it can suddenly get quite exciting... normally for the wrong reasons.\r\n\r\nI'll talk through a few stories of security flaws and misconfigurations in Django projects, and what you can do about them for your own projects:\r\n\r\n* A Django-based site on facebook.com with a remote code execution flaw\r\n* GitHub's broken password mechanism that was discovered to be a problem for much of the internet\r\n* How use of mark_safe is normally completely unsafe - and can lead to admin takeover\r\n* The one safe way to pass data to your JavaScript\r\n* How to help security researchers contact you directly about flaws, rather than get delayed by your confused but well-meaning support or sales staff\r\n\r\nEach short story will be backed with short code snippets to make the problems concrete. I'll also try cover where the web, Python, and Django are moving to make such flaws rarer.\r\n\r\nVideo: https://www.youtube.com/watch?v=bvLJTNRpnt8&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 34, "code": "SWZZCW", "public_name": "Adam Johnson", "biography": "Hi, I'm Adam Johnson. I'm a software engineer working with AWS, Ansible, Django, and Python. I have 13 years experience in web development and 4 years experience as DevOps lead.\r\n\r\nI'm a core developer on the Django project, and a co-organizer of the The London Django Meetup.\r\n\r\nI'm based in London but am often travelling around the world.", "answers": []}], "links": [], "attachments": [], "answers": []}]}}, {"index": 2, "date": "2020-09-19", "day_start": "2020-09-19T04:00:00+01:00", "day_end": "2020-09-20T03:59:00+01:00", "rooms": {"Virtual": [{"id": 18, "guid": "3e915380-e9ca-5ba3-b31a-170d93b0c5fa", "logo": "", "date": "2020-09-19T09:15:00+01:00", "start": "09:15", "duration": "00:40", "room": "Virtual", "slug": "NK7DRT", "url": "https://cfp.2021.djangocon.eu/porto/talk/NK7DRT/", "title": "Ceci n'est pas un job", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "More than once I have had the pleasure of being informed that my job (which by the way, is also the job of quite a few members of the DjangoCon audience) is not a \u201creal\u201d job.\r\n\r\nIn this talk I will try to discover what a \u201creal job\u201d is. I will also find out more about what is \u201creal\u201d, and what is a \u201cjob\u201d. \r\n\r\nAs a person who allegedly does not have a real job, and who comes from a country (Belgium) whose reality some people also doubt, I am ideally placed to make these discoveries. I will enlist the assistance of some famous Belgians, including the famous philosopher-actor Jean-Claude Van Damme (not a real actor, according to some; not a real philosopher, according to others) and the artist Ren\u00e9 Magritte. \r\n\r\nI plan to show that being a web developer is not really a job - it\u2019s much more important than that.", "description": "This talk will bring you along for a journey illuminated by some insightful remarks by Jean-Claude Van Damme.\r\nJean-Claude Van Damme is for some reason not considered a \u201creal\u201d philosopher. We\u2019ll make our own judgements about that, and we\u2019ll see whether what he has to say can shed some light on the business of web development - which some people don\u2019t think is a \u201creal\u201d job.\r\n\r\nWe\u2019ll make a number of (unexpected) discoveries. Maybe Van Damme has things to say that match Immanuel Kant for depth and insight. Maybe reality isn\u2019t what people think it is, or maybe a job should really be a burden or a torture. Just like Jean-Claude Van Damme himself, these words are hardly giants, yet they contain and conceal a great deal - and have a lot to tell us about what we do, and what we do to the world.\r\n\r\nAnd finally, I will show how all roads lead to Django (Reinhardt, another Belgian).\r\n\r\nThis is intended to be a funny talk, but my point and my intentions are very serious. I hope to share with other web developers the sense that what they choose to do has serious consequences. Being a web developer may be a job; in one sense it may even be a real job - but in another, it\u2019s not really a job, but something quite a bit more important than that.\r\n\r\nVideo: https://www.youtube.com/watch?v=bMsr8tZQm9w&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 18, "code": "XMEJBK", "public_name": "Leila Verhaegen", "biography": "My name is Leila I'm 26.\r\nI'm a young developer in Belgium and I'm the co-founder of LevIT\r\nI code since 2014 and attend to python/Django conferences since 2015", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 2, "guid": "73917b35-677f-5bac-be63-2c93e9bd634a", "logo": "", "date": "2020-09-19T09:55:00+01:00", "start": "09:55", "duration": "00:40", "room": "Virtual", "slug": "GTQPVP", "url": "https://cfp.2021.djangocon.eu/porto/talk/GTQPVP/", "title": "Security strategies for multi-tenant applications", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "When writing multi-tenant applications, a very typical and dangerous bug is to forget about a WHERE statement and show data to the wrong users. This often goes unnoticed, since most people are only testing with one user account. This talk discusses strategies to prevent this class of error entirely.", "description": "Most modern web applications are multi-tenant applications in some way \u2013 they allow specific users, groups, or organizations access some data or work together in some way, but separated from other groups that are served by the same application.\r\n\r\nTherefore, the software somehow needs to know what data to show and separate data of multiple tenants from each other in a safe way. The talk will discuss options on how to do this on a database level and in which situations this is possible.\r\n\r\nHowever, often it\u2019s not possible or feasible to solve this on a database level, so one falls back to handling multi-tenancy manually, by adding a WHERE tenant = current_tenant clause to every database access. This requires great caution and can quickly lead to dangerous bugs and data leaks: If the clause is forgotten, it will users can see data from other tenants. However, during development and testing, it will probably look fine due to lack of enough tenants to make the problem easily visible.\r\n\r\nThis talk will present strategies to prevent this kind of problem, including the Django library django-scopes which allows to make sure no such query ever slips through. While the library is Django-specific, the ideas behind it are not.\r\n\r\nVideo: https://www.youtube.com/watch?v=B6G2xbiCji0&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 8, "code": "PTEDLB", "public_name": "Raphael Michel", "biography": "I\u2018m a software developer working with the web for more than thirteen years and with Python and Django for over seven years. I run a small software company and maintain multiple open source projects. The most notable Django-based one is pretix, a full-featured and free conference ticketing software.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 29, "guid": "c32c6b89-eb72-5e53-a81b-d5194fd888a6", "logo": "", "date": "2020-09-19T10:35:00+01:00", "start": "10:35", "duration": "00:40", "room": "Virtual", "slug": "GUWCXE", "url": "https://cfp.2021.djangocon.eu/porto/talk/GUWCXE/", "title": "Implementing a Cross-DB JSONField", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Tired of dealing with structured data? Want to avoid database migrations? Try `JSONField`!\r\n\r\nThis talk explains the implementation of a cross-DB `JSONField`, a new feature released in Django 3.1, that can be used on all database backends supported by Django.", "description": "Having structured data is great, but sometimes you just want to store *some* data without caring much about the structure. This is especially true when you're prototyping something: you're still unsure how your database will look like, but you know you're going to store something in it. Well, enter `JSONField`!\r\n\r\n`JSONField`, from the Django docs:\r\n\r\n> \"A field for storing JSON encoded data. In Python the data is represented in its Python native format:\r\n> dictionaries, lists, strings, numbers, booleans, and `None`.\"\r\n\r\nBefore 3.1, official support for `JSONField` only exists through the `django.contrib.postgres` module, which means it can only be used on PostgreSQL. To use `JSONField` on other database backends, one needs to use third-party packages such as [jsonfield] (1k+ stars), [django-mysql], and [oracle-json-field]. A ticket for cross-DB `JSONField` ([#12990]) was made 10 years ago. The abundance of third-party packages for `JSONField` suggests that it's an in-demand feature.\r\n\r\nThe existing [PostgreSQL] `JSONField` uses the built-in `jsonb` data type. [MariaDB] and [MySQL] have a `JSON` data type along with JSON functions. [SQLite] can store JSON data as `TEXT` and use the JSON1 extension which includes JSON functions. [Oracle Database] also has JSON functions and can store JSON data with the `IS JSON` constraint.\r\n\r\nSo, a cross-DB `JSONField` is feasible, but it can be a bit tricky to implement because each backend deals with JSON data differently. Besides storing and loading Python objects into/from JSON, `JSONField` also supports some custom lookups and transforms that can be used to [query JSON data]. This talk will cover how saving JSON data and the custom queries are implemented in the cross-DB `JSONField`.\r\n\r\n[jsonfield]: https://github.com/dmkoch/django-jsonfield\r\n[django-mysql]: https://github.com/adamchainz/django-mysql\r\n[oracle-json-field]: https://github.com/Exscientia/oracle-json-field\r\n[#12990]: https://code.djangoproject.com/ticket/12990\r\n[PostgreSQL]: https://www.postgresql.org/docs/9.5/datatype-json.html\r\n[MariaDB]: https://mariadb.com/kb/en/json-data-type\r\n[MySQL]: https://dev.mysql.com/doc/refman/5.7/en/json.html\r\n[SQLite]: https://www.sqlite.org/json1.html\r\n[Oracle Database]: https://docs.oracle.com/database/121/ADXDB/json.htm\r\n[query JSON data]: https://docs.djangoproject.com/en/3.0/ref/contrib/postgres/fields/#querying-jsonfield\r\n\r\nVideo: https://www.youtube.com/watch?v=o9Zb1RmS8vk&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 12, "code": "7ZHWE7", "public_name": "Sage M. Abdullah", "biography": "Computer Science student at Universitas Indonesia. Google Summer of Code (GSoC) 2019 student with Django Software Foundation. My GSoC project aimed to [add a cross-DB JSONField to Django](https://github.com/django/django/pull/12392).\r\n\r\n- [GitHub](https://github.com/laymonage)\r\n- [Twitter](https://twitter.com/laymonage)", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 68, "guid": "97e421b4-758b-5056-b2e7-d798983cb61b", "logo": "", "date": "2020-09-19T11:15:00+01:00", "start": "11:15", "duration": "00:40", "room": "Virtual", "slug": "X3NQV3", "url": "https://cfp.2021.djangocon.eu/porto/talk/X3NQV3/", "title": "GraphQL-first Django", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "GraphQL is a more flexible alternative to REST for building web APIs, and thus is becoming a strong foundation for any modern web stack. This is especially true where static HTML templates are not cutting it or a sophisticated single-page interface is needed, which is often the case on the web nowadays. Even though Django was designed as a model-view-template framework, it can work perfectly well as a GraphQL server to power JavaScript apps. This talk will elaborate on the anatomy of a GraphQL-first Django application, in which GraphQL queries and mutations are the primary interfaces exposed by the backend, while the frontend remains fully dynamic.", "description": "GraphQL is finding itself as a foundation of the modern web development stack, particularly where a dynamic, single-page UI is required. It unlocks many great benefits, some of which are:\r\n\r\n- fetching only the required data necessary to render particular views; while eliminating the need to call and combine data from multiple endpoints\r\n- developer experience through incredible out-of-the-box tooling available - interactive API explorers or code generators for statically typed languages used in the frontend\r\n- ability to combine various APIs under a single gateway with federations\r\n\r\nDjango is loved for its simplicity, reliability, and excellent documentation. All this makes it an obvious choice for many backend teams that speak Python. Although designed as a model-view-template framework, it can be successfully used as a GraphQL server.\r\n\r\nIn this talk, we'll take a look at the architecture and different aspects of a Django project, where the GraphQL API is a first-class citizen:\r\n\r\n- structure of a single Django app - how to organize the modules for GraphQL types, mutations and queries\r\n- mapping Django models to GraphQL types and building CRUD mutations to manage them\r\n- authentication with JSON Web Tokens\r\n- testing GraphQL queries with py.test\r\n\r\nAdditionally, we will also see how choosing GraphQL can affect the entire product development process in teams where JavaScript / TypeScript are the primary languages used for frontend development. Lastly, we'll talk about some of the downsides of Graphene that every developer needs to be aware of, and also about the new alternatives that have begun to show up in the Python/GraphQL ecosystem.\r\n\r\nThe structure of the talk:\r\n\r\n1. A case for GraphQL - the most essential benefits, how it differs from REST, the main concepts, and examples - 5 min\r\n2. GraphQL-first Django - the anatomy of a Django application that exposes a GraphQL API built using the Graphene framework - 15 min\r\n3. A GraphQL-first workflow - how schema-first approach speeds up web development for both frontend and backend teams - 5 min\r\n4. The limitations of Graphene and the future of GraphQL in Python - 5 min\r\n\r\nVideo: https://www.youtube.com/watch?v=GoGpjngDB7c&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 60, "code": "A93N9Y", "public_name": "Marcin G\u0119bala", "biography": "I'm a software engineer who specializes in building web apps using Python, Django and GraphQL. Currently, I work as a lead developer at Saleor - an open-source headless e-commerce platform. I speak at tech conferences about Python and GraphQL. I'm a runner, musician and traveler in my free time. I'm based in Wroc\u0142aw, Poland.\r\n\r\nTwitter: https://twitter.com/maarcingebala", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 55, "guid": "32f52c85-bcfe-5120-8a28-89a812a2a778", "logo": "", "date": "2020-09-19T11:55:00+01:00", "start": "11:55", "duration": "00:40", "room": "Virtual", "slug": "9WGTJF", "url": "https://cfp.2021.djangocon.eu/porto/talk/9WGTJF/", "title": "Understanding Celery to maintain your sanity", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Many Django apps use Celery as a task queue for long running tasks. Many talks and blogs focus on how to use Celery. But we can't stop there. Once you're actually using Celery it's time to understand what it is actually doing so you can be prepared for when things go wrong and know what tools are out there to help you troubleshoot any issues.", "description": "I had the idea for this talk after we had a critical issue in production. All of our Celery workers were refusing to pick up any new tasks. I had read the docs on how to use Celery but now that things had gone wrong I needed to know _how_ it worked. That was a very stressful time to try to learn that. Anyone who has Celery in their stack should invest the time to understand Celery before it goes wrong.\r\n\r\nThe outline of my talk is:\r\n  * Why do I need an asynchronous task queue? (Doesn't Django have everything I need?) (5 mins)\r\n  * Why would I pick Celery? (and why is it so popular) (1 min)\r\n  * What is it actually doing? (10 mins)\r\n  * An example of things going wrong (and with a tool so configurable, it probably will) (4 mins)\r\n  * How to intervene and correct problems (8 mins)\r\n  * The future of async with Django (2 mins)\r\n\r\nVideo: https://www.youtube.com/watch?v=v1m-jbPrYfw&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 49, "code": "ZXVHMC", "public_name": "Ashwini Balnaves", "biography": "", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 5, "guid": "c2dc105a-6ea5-59c3-9d44-70a442787ef6", "logo": "/cfp-media/porto/images/X38KZG/title_slide_2brcqCn.png", "date": "2020-09-19T12:35:00+01:00", "start": "12:35", "duration": "00:40", "room": "Virtual", "slug": "X38KZG", "url": "https://cfp.2021.djangocon.eu/porto/talk/X38KZG/", "title": "Search Options in Django", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "I like websites with search bars. If the search function works well, I can enter a few words and get a list of results, with the things that interest me at the top. Whether you use it as a help system or for product information, search functionality can add a lot of value to a Django application. But implementing proper search functionality is not easy. Django offers multiple ways to implement search functionality, each with its advantages and disadvantages.\r\n This talk will give you an overview of the different ways in which you can implement search functionality in Django. We will look at the full-text search options that come with databases and the use of a dedicated search engine like Elastic Search or Postgres. Along the way, you will learn about the different ways in which you can index your data to learn how to evaluate your search results.", "description": "We will look at some different search options in Django and see when each option is the most useful.\r\nFirst we will see why you should consider fulltext search in your application and the difference in text search with SQL.\r\nThen, we look at fulltext search with Postgresql and Django. We look at different ways to search and rank documents and their performance implications.\r\nIn the next step, we look at searching in Django with Elasticsearch.\r\nWe close with short comparisons of the pros and cons of the different search options.\r\n\r\nVideo: https://www.youtube.com/watch?v=r_IyFYdIbQw&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 9, "code": "EMAWS3", "public_name": "Stefan Baerisch", "biography": "I am a software engineer and project manager from Munich. I like simple, working software and have used Python since 2009.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 97, "guid": "897023f8-630c-5885-b6c8-f106b3a768eb", "logo": "", "date": "2020-09-19T13:15:00+01:00", "start": "13:15", "duration": "00:40", "room": "Virtual", "slug": "QFA38E", "url": "https://cfp.2021.djangocon.eu/porto/talk/QFA38E/", "title": "Accessibility wins for Django projects", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Accessibility is a big topic, which can be hard to approach. We'll look at how the team behind Wagtail set to work on making their CMS more accessible, focusing on Django-specific improvements that are relevant to all projects.\r\n\r\nAlong the way we'll learn about,\r\n\r\n- Why we care about making accessible sites and apps\r\n- Accessibility considerations when modelling a site\u2019s content\r\n- Tooling and techniques to assess the accessibility of Django projects", "description": "## Introduction\r\n\r\nOver the last year, the team behind Wagtail set out to make their CMS more accessible. We wanted to both make the CMS more usable for users of assistive technologies, and reach the relevant compliance targets.\r\n\r\nWe learned a lot about accessibility during this process. While most accessibility concerns are resolved at the UI level with templates and styles, there are a number of cases where deeper knowledge of Django comes in handy. Django developers can make a difference on their projects by being aware of cases where back-end customisations are needed, such as:\r\n\r\n- Forms and fields markup. Django\u2019s defaults can hinder navigation for screen reader users, and need to be customised.\r\n- Required attributes for models of images. Administrators should also be able to customise their alt text, in the context images are used.\r\n\r\nDevelopers should also make the most of available tooling for Django projects: linters, HTML validation middleware, pattern libraries; that will all help building an accessible experience.\r\n\r\nAnd beyond developer tools, it\u2019s also very valuable for developers to know how to use assistive technologies to test their work. It\u2019s completely within reach of anyone to do basic testing with screen readers, and this is beneficial on all projects.\r\n\r\n## Talk structure\r\n\r\n### Intro: a Wagtail story\r\n\r\n- Thibaud, front-end developer, core developer of Wagtail\r\n- We started work on making Wagtail more accessible about a year ago\r\n- Here is what we learned along the way, that is relevant to all Django projects\r\n\r\n### Why we care about accessibility\r\n\r\n- Inclusive design \u2013 user experience should be good for_all_ users\r\n- Accessibility improvements generally lead to usability improvements\r\n- Legislation is evolving and compliance is now mandatory\r\n- This is relevant to all projects \u2013 not just public facing sites\r\n\r\n### Accessibility 101\r\n\r\n- Semantic page structure\r\n- Keyboard navigation\r\n- Images and icons\r\n\r\n### Django templates and accessibility\r\n\r\n- Forms\r\n- Pagination\r\n- HTML validation & templates linting\r\n\r\n### Django models and accessibility\r\n\r\n- Headings, labels and landmarks\r\n- Images\u2019 alt text\r\n\r\n### Live demo: screen reader testing\r\n\r\n- Testing a page with a browser extension\r\n- Testing a page with a real screen reader\r\n- Screen reader keyboard shortcuts you can learn in 1 minute\r\n\r\n### Key takeaways\r\n\r\n- Accessibility matters on all projects\r\n- Django developers can make a difference\r\n- Screen reader testing is within reach and has a big impact\r\n\r\n## Approach\r\n\r\nThe talk starts with a case study of how we set out to make Wagtail more accessible, prompted by recent legislative changes in the EU and UK. We\u2019ll then quickly move on to accessibility issues that tend to be specific to Django projects, demonstrating their consequences and suggesting solutions. We\u2019ll showcase tools that can help developers on Django projects in particular \u2013 then do a live demo of screen reader testing, a technique that all developers should know the basics of to meaningfully test that what they build is accessible.\r\n\r\nThis should generally be a beginner-level talk for Django developers, but there will be a lot to learn for all skill levels in the domain of accessibility. Finally I believe that screen reader testing is underused as a technique, and will be relevant to most of the audience.\r\n\r\nVideo: https://www.youtube.com/watch?v=PO0w2BJk33s&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 73, "code": "FGTHLQ", "public_name": "Thibaud Colas", "biography": "I love cookies. Watercolour, JS, React, accessibility. Core developer of [Wagtail](https://github.com/wagtail), building things [@Torchbox](https://twitter.com/torchbox).\r\n\r\n[GitHub: thibaudcolas](https://github.com/thibaudcolas)", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 71, "guid": "ff4261fa-85dd-50e7-9ff3-c14aa7697931", "logo": "", "date": "2020-09-19T13:55:00+01:00", "start": "13:55", "duration": "00:40", "room": "Virtual", "slug": "AHTFPW", "url": "https://cfp.2021.djangocon.eu/porto/talk/AHTFPW/", "title": "Integrating Design and Development teams by implementing a Design System", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "In the software industry, developers, designers and stakeholders should be working together to achieve the same goals and deliver high quality products to the final users. To be actually able to work together in an efficient and harmonic way, though, is a whole other thing. In a team composed by developers and designers, we were able to mitigate the impact of communication flaws and concepts divergences in a continuous effort to cover  the blank spots we found on every iteration we went through. In this talk I\u2019m going to share some lessons learned about how to integrate both teams\u2019 work with a solid management process.", "description": "To deliver a product that involves design - from research to screens and usability - and its implementation by a development team can be a big challenge for all parts involved. If we aim to really address users needs and deliver high quality products and meaningful experiences, it\u2019s important to have a team aligned and fully integrated.\r\n\r\nThe interaction between stakeholders, designers and developers normally involve a lot of friction and divergence of concepts and vocabulary. The back and forth between development and QA normally take a lot of time and effort till things get quite right. Besides, people from different backgrounds tend to have diverging perspectives about the value and the challenges of implementing an interface. Developers get frustrated when faced with a non negotiable design, seemingly impossible  to implement, while designers can be angry seeing their conceptions poorly executed and stakeholders impatient with a product that never gets done.\r\n\r\nThese problems can be mitigated by a solid management process and a conscious effort to create a common ground for communication. Following a path in the direction of the implementation of a Design System can be a powerful tool to achieve that.\r\n\r\nIn this talk I\u2019m going to share the results of the gradual improvements adopted by our team in an effort to make these interaction smoother and to deliver a product with higher quality standards and more aggregated value to our client. I\u2019ll explain how the processes we introduced to our interactions were able to impact our productivity while improving the team\u2019s and the project\u2019s health.\r\n\r\n# Outline\r\n\r\n1. Basic definitions of a Design System\r\n    1. Why having a Design System at all? The advantages of having consistent and predictable patterns for design implementation\r\n2. What it means for a developer to implement a Design System\r\n    1. Creating a common vocabulary between Design, Development and Stakeholders\r\n    2. Reflecting the Design System structure in the project\u2019s - components, files and variable names organization\r\n    3. Having predictable patterns to work with\r\n    4. Being able to easily QA our own work before submitting it\r\n        1. How making a QA checklist improved our validation process\r\n3. Quick introduction to the project\u2019s scenario\r\n    1. The redesign of a platform with lots of legacy code and unclear business rules\r\n4. Processes developed to improve our teams interactions\r\n    1. The complete workflow and its transitions from first ideas to production\r\n        1. The Planning Board and its rituals - ideas, research and specification for development\r\n        2. The Design Board and its rituals - research, low and high fidelity prototyping, client and development team validation\r\n        3. The Development Board and its rituals - development, code review, QA and delivery\r\n    2. The Specification Meeting\r\n        1. Checking for available data\r\n        2. Checking the feasibility of desired interactions\r\n        3. Using available components or estimating the development of new ones\r\n        4. Checking for empty and loading states\r\n        5. UI elements states - don\u2019t forget the hover and focus states\r\n        6. Evaluating the effort to implement desired interfaces or thinking of more viable alternatives\r\n    3. Interacting with the Stakeholders\r\n        1. Constant feedback from the first design ideas to the development challenges\r\n        2. Keeping non technical people informed of the limitations encountered during implementation\r\n        3. Proposing more viable alternatives when faced with technical obstacles\r\n        4. Being clear about delays and tasks that will take a long time\r\n\r\nVideo: https://www.youtube.com/watch?v=-z-zet2mlMg&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 62, "code": "C7FLPU", "public_name": "Mariana Bedran Lesche", "biography": "", "answers": []}, {"id": 94, "code": "JZT8QA", "public_name": "Daniela Falcone", "biography": "Feminist, crazy cat lady, vegetarian, UX Designer, and the office's plant saviour. For her, designers are innate problem solvers capable to impact and influence others for a positive change.\r\n\r\n@falconedani", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 110, "guid": "42c1ad1c-3c9e-5c48-83a6-f1f8be8c1965", "logo": "", "date": "2020-09-19T14:35:00+01:00", "start": "14:35", "duration": "01:15", "room": "Virtual", "slug": "7D8YKQ", "url": "https://cfp.2021.djangocon.eu/porto/talk/7D8YKQ/", "title": "KEYNOTE - Ecosystem Revolution with Django", "subtitle": "", "track": null, "type": "Keynote", "language": "en", "abstract": "Over the last few years, Portugal has become a pool of talent with an above-average success rate in tech-driven companies. This results in the fuelling of the country\u2019s technological scene and in the growth of an ecosystem of innovative startups. These tech businesses are increasingly relying on the capabilities of a web framework like Django to power its developments.", "description": "As the co-founder of one of Europe\u2019s fastest-growing startups, Lu\u00eds Roque will talk about the Portuguese tech landscape and how its rapid development has relied on frameworks that allow for efficient developments. Python itself has been one of the backbones of the company's tech solution. In this talk, HUUB's CEO will also shed a light on how the startup will keep on working towards a microservices event-driven architecture in order to develop the simplest yet most intelligent platform for Fashion Supply Chain.\r\n\r\nVideo: https://www.youtube.com/watch?v=ZtZ-wUFTqUk&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 91, "code": "GBLJWY", "public_name": "Luis Roque", "biography": "Lu\u00eds Roque is a tech entrepreneur and the CEO and Co-Founder of HUUB, the startup that is disrupting the supply chain industry and shaping the future of fashion. Since the start of his academic journey, Lu\u00eds Roque completed a degree in Computer Engineering, a specialization in Web Development and a postgraduate degree in Business Intelligence & Analytics.\r\n\r\nLu\u00eds began his career at Sonae as a Supply Chain Project Manager, leading the implementation of new logistics hubs across the globe and all the new B2C operations. In 2016, he shifted to Parfois, an international fashion retailer, where he designed and developed all algorithms and data mining models to support decision making for the 700 stores in over 50 countries.\r\n\r\nJust before starting his role at Parfois, Lu\u00eds and the three other co-founders of HUUB began to draw the underpinning concepts and the core business model of the startup. The idea rapidly proved its potential through the company\u2019s swift growth in the early stages and Lu\u00eds decided to dedicate himself to the evolution and progress of HUUB.\r\n\r\nBuilding upon his experience, Lu\u00eds is currently doing a PhD in Artificial Intelligence, while leading the company\u2019s growth, bringing innovation to logistics and revolutionizing the fashion supply chain industry.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 52, "guid": "5ea8f6ff-106d-5acc-a458-3a384e9584c0", "logo": "", "date": "2020-09-19T15:50:00+01:00", "start": "15:50", "duration": "00:40", "room": "Virtual", "slug": "JUJ3BX", "url": "https://cfp.2021.djangocon.eu/porto/talk/JUJ3BX/", "title": "Choose, and choose quickly: Optimising ModelChoiceField", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Ever had a ModelForm, a DRF Serializer, a FilterSet grind to a halt rendering a choice field? Of course you have. Ever given up on it and resorted to raw ids? -- No don't answer that.\r\n\r\nWe're going to look at how you can get a grip on ModelChoiceField when you're dealing with lots of related objects, and when you need to offer that choice again and again and again, without needing to put the kettle on.", "description": "When we talk about performance in Django, the usual example is iterating a QuerySet. \r\nWe have our list of authors and we reach across a relationship to fetch each one's blog posts.\r\nMaybe we reach across another one to fetch the comments on each of the blog posts. \r\nAll of a sudden, our view, which worked fine with the three object test data in development, grinds to a halt. \r\nFor this we have `prefetch_related()` and `select_related()`, and there are lots of talks and posts on how to leverage those. \r\n\r\nI want to talk about an example I see coming up in the Admin list view, when renderering DRF serializers, a Django Filter FilterSet, or a ModelForm, particularly when using a form templating system like Crispy Forms. \r\n\r\nIn these cases, when you're rendering a ModelChoiceField with many related objects, or when you\u00b4re repeatedly rendering the same choice field, in a FormSet, such as the admin\u00b4s list_editable, performance drops off a cliff. \r\nFrequently issues are opened on Django, or DRF, or Django Filter, complaining that the rendering is slow, that something is broken. \r\nOften the solution is along the lines of the admin\u00b4s `raw_id_fields`, but this feels like surrender. We loose all the data validation and UI affordance that ModelChoiceField gives us. \r\n\r\nThere has to be a better way. Spoiler: there is. \r\n\r\nI will show a few examples of slow rendering choice fields: the admin, DRF, Django-Filter, and a FormSet rendered with Crispy Forms. \r\n\r\nFor each, we\u00b4ll build up simple example. That looks like it's fine. Give it a moderate amount of data and we have issues. (Put even a small number of choices in a large FormSet and see how it grinds.)\r\n\r\nThen we'll dig in and show where we can re-use work to speed up the choice field generation. We'll see that in all of our cases we can get performant results, and that there's no need to adopt a sub-optimal alternative.\r\n\r\nVideo: https://www.youtube.com/watch?v=e52S1SjuUeM&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 46, "code": "JHNLPQ", "public_name": "Carlton Gibson", "biography": "Django Fellow. Core team on DRF. Maintainer of Django-Filter, Crispy Forms and more.", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 75, "guid": "dac4f3bf-c122-547d-bffc-0ae0cf9f097a", "logo": "", "date": "2020-09-19T16:30:00+01:00", "start": "16:30", "duration": "00:40", "room": "Virtual", "slug": "GJGDDR", "url": "https://cfp.2021.djangocon.eu/porto/talk/GJGDDR/", "title": "The Design and Development of Choices in Django 3.0", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "The story of how the Choices feature in Django 3.0 came to be, and how we met challenges of design, implementation, and the project's process. A peek \"behind the curtains\"(*) of Django development - from discussions and proof-of-concept to a merged PR - and some lessons learned.\r\n\r\n(*) It's all public", "description": "One of the most noted highlights of version 3.0 of Django is the ability to specify field choices using enumeration types, known as Choices, as an alternative to the old way, using sequences of value-display pairs.\r\n\r\nIn this talk we will present this feature and follow its development from the original, failed proposal, through its resurrection and the journey to inclusion on Django. We'll examine the process and the design issues, the objections and problems raised, and study the technical considerations and solutions which eventually led to Choices in Django 3.0.\r\n\r\nVideo: https://www.youtube.com/watch?v=wQCZ_tcS0uk&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 67, "code": "YRVC39", "public_name": "Shai Berger", "biography": "Over 30 years in software development, over 20 years using Python. A member of the Django Core Team. Board Member at Hamakor, the Israeli Free Software NPO, and co-founder of PyCon Israel. Today working as a consultant at Kaplan Open Source Consulting.\r\n\r\nGithub: [shaib](https://github.com/shaib)\r\n\r\nTwitter: [@shaib_il](https://twitter.com/shaib_il) (DMs open)\r\n\r\nMail: shai@platonix.com or shai@kaplanopensource.co.il", "answers": []}], "links": [], "attachments": [], "answers": []}, {"id": 17, "guid": "1b8209e4-d6db-5525-9e98-3e1d309287d8", "logo": "", "date": "2020-09-19T17:10:00+01:00", "start": "17:10", "duration": "00:40", "room": "Virtual", "slug": "JDCBMP", "url": "https://cfp.2021.djangocon.eu/porto/talk/JDCBMP/", "title": "How To Break Django: With Async", "subtitle": "", "track": null, "type": "Talk", "language": "en", "abstract": "Curious how to put your code into a deadlock? Want infinite loops, but in parallel? Or just want a new, exciting kind of data corruption? We'll look at these and other ways that asynchronous code can make you write some spectacularly nasty code, as well as the ways Django tries to save you from these terrible fates.", "description": "Django has a reputation for being safe and reliable, but what happens when you take that reputation and push it up against Python's hot new frontier that is asynchronous support?\r\n\r\nAsynchronous code has many pitfalls that you won't be used to from traditional, synchronous programming - we'll take a look at them, and how they crop up in Django's request cycle. Some of them you can wander into via an easy mistake; some of them are caused by Django contributors getting things subtly wrong in the core code; and some of them are just plain fun to try.\r\n\r\nWe'll also talk about Django's culture of safety, how to protect against these issues both automatically and with manual review, and what asynchronous programming means for safety in programming at large.\r\n\r\nVideo: https://www.youtube.com/watch?v=19Uh_PA_8Rc&ab_channel=DjangoConEurope", "recording_license": "", "do_not_record": false, "persons": [{"id": 17, "code": "WJTQC7", "public_name": "Andrew Godwin", "biography": "Andrew is a long-time Django contributor, mostly involving himself with database migrations and asynchronous support. His day job is working as a staff engineer at Robinhood, and when he's not coding, he enjoys learning how to make everything, adventuring in the mountains, or flying light aircraft.\r\n\r\nTwitter: https://twitter.com/andrewgodwin\r\nWebsite: https://www.aeracode.org", "answers": []}], "links": [], "attachments": [], "answers": []}]}}]}}}